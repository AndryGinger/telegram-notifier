# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.7

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list


# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/local/Cellar/cmake/3.7.1/bin/cmake

# The command to remove a file.
RM = /usr/local/Cellar/cmake/3.7.1/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /Users/aom/ruby/telegram/td

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /Users/aom/ruby/telegram/td/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components

.PHONY : list_install_components/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/local/Cellar/cmake/3.7.1/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/usr/local/Cellar/cmake/3.7.1/bin/ccmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/local/Cellar/cmake/3.7.1/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: install/local

.PHONY : install/local/fast

# Special rule for the target test
test:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running tests..."
	/usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process $(ARGS)
.PHONY : test

# Special rule for the target test
test/fast: test

.PHONY : test/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/local/Cellar/cmake/3.7.1/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: install/strip

.PHONY : install/strip/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# The main all target
all: cmake_check_build_system
	cd /Users/aom/ruby/telegram/td/build && $(CMAKE_COMMAND) -E cmake_progress_start /Users/aom/ruby/telegram/td/build/CMakeFiles /Users/aom/ruby/telegram/td/build/tddb/CMakeFiles/progress.marks
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f CMakeFiles/Makefile2 tddb/all
	$(CMAKE_COMMAND) -E cmake_progress_start /Users/aom/ruby/telegram/td/build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f CMakeFiles/Makefile2 tddb/clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f CMakeFiles/Makefile2 tddb/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f CMakeFiles/Makefile2 tddb/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /Users/aom/ruby/telegram/td/build && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
tddb/CMakeFiles/binlog_dump.dir/rule:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f CMakeFiles/Makefile2 tddb/CMakeFiles/binlog_dump.dir/rule
.PHONY : tddb/CMakeFiles/binlog_dump.dir/rule

# Convenience name for target.
binlog_dump: tddb/CMakeFiles/binlog_dump.dir/rule

.PHONY : binlog_dump

# fast build rule for target.
binlog_dump/fast:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/binlog_dump.dir/build.make tddb/CMakeFiles/binlog_dump.dir/build
.PHONY : binlog_dump/fast

# Convenience name for target.
tddb/CMakeFiles/tddb.dir/rule:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f CMakeFiles/Makefile2 tddb/CMakeFiles/tddb.dir/rule
.PHONY : tddb/CMakeFiles/tddb.dir/rule

# Convenience name for target.
tddb: tddb/CMakeFiles/tddb.dir/rule

.PHONY : tddb

# fast build rule for target.
tddb/fast:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/build
.PHONY : tddb/fast

td/db/SqliteDb.o: td/db/SqliteDb.cpp.o

.PHONY : td/db/SqliteDb.o

# target to build an object file
td/db/SqliteDb.cpp.o:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/SqliteDb.cpp.o
.PHONY : td/db/SqliteDb.cpp.o

td/db/SqliteDb.i: td/db/SqliteDb.cpp.i

.PHONY : td/db/SqliteDb.i

# target to preprocess a source file
td/db/SqliteDb.cpp.i:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/SqliteDb.cpp.i
.PHONY : td/db/SqliteDb.cpp.i

td/db/SqliteDb.s: td/db/SqliteDb.cpp.s

.PHONY : td/db/SqliteDb.s

# target to generate assembly for a file
td/db/SqliteDb.cpp.s:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/SqliteDb.cpp.s
.PHONY : td/db/SqliteDb.cpp.s

td/db/SqliteKeyValue.o: td/db/SqliteKeyValue.cpp.o

.PHONY : td/db/SqliteKeyValue.o

# target to build an object file
td/db/SqliteKeyValue.cpp.o:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/SqliteKeyValue.cpp.o
.PHONY : td/db/SqliteKeyValue.cpp.o

td/db/SqliteKeyValue.i: td/db/SqliteKeyValue.cpp.i

.PHONY : td/db/SqliteKeyValue.i

# target to preprocess a source file
td/db/SqliteKeyValue.cpp.i:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/SqliteKeyValue.cpp.i
.PHONY : td/db/SqliteKeyValue.cpp.i

td/db/SqliteKeyValue.s: td/db/SqliteKeyValue.cpp.s

.PHONY : td/db/SqliteKeyValue.s

# target to generate assembly for a file
td/db/SqliteKeyValue.cpp.s:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/SqliteKeyValue.cpp.s
.PHONY : td/db/SqliteKeyValue.cpp.s

td/db/SqliteKeyValueAsync.o: td/db/SqliteKeyValueAsync.cpp.o

.PHONY : td/db/SqliteKeyValueAsync.o

# target to build an object file
td/db/SqliteKeyValueAsync.cpp.o:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/SqliteKeyValueAsync.cpp.o
.PHONY : td/db/SqliteKeyValueAsync.cpp.o

td/db/SqliteKeyValueAsync.i: td/db/SqliteKeyValueAsync.cpp.i

.PHONY : td/db/SqliteKeyValueAsync.i

# target to preprocess a source file
td/db/SqliteKeyValueAsync.cpp.i:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/SqliteKeyValueAsync.cpp.i
.PHONY : td/db/SqliteKeyValueAsync.cpp.i

td/db/SqliteKeyValueAsync.s: td/db/SqliteKeyValueAsync.cpp.s

.PHONY : td/db/SqliteKeyValueAsync.s

# target to generate assembly for a file
td/db/SqliteKeyValueAsync.cpp.s:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/SqliteKeyValueAsync.cpp.s
.PHONY : td/db/SqliteKeyValueAsync.cpp.s

td/db/SqliteStatement.o: td/db/SqliteStatement.cpp.o

.PHONY : td/db/SqliteStatement.o

# target to build an object file
td/db/SqliteStatement.cpp.o:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/SqliteStatement.cpp.o
.PHONY : td/db/SqliteStatement.cpp.o

td/db/SqliteStatement.i: td/db/SqliteStatement.cpp.i

.PHONY : td/db/SqliteStatement.i

# target to preprocess a source file
td/db/SqliteStatement.cpp.i:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/SqliteStatement.cpp.i
.PHONY : td/db/SqliteStatement.cpp.i

td/db/SqliteStatement.s: td/db/SqliteStatement.cpp.s

.PHONY : td/db/SqliteStatement.s

# target to generate assembly for a file
td/db/SqliteStatement.cpp.s:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/SqliteStatement.cpp.s
.PHONY : td/db/SqliteStatement.cpp.s

td/db/binlog/Binlog.o: td/db/binlog/Binlog.cpp.o

.PHONY : td/db/binlog/Binlog.o

# target to build an object file
td/db/binlog/Binlog.cpp.o:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/binlog/Binlog.cpp.o
.PHONY : td/db/binlog/Binlog.cpp.o

td/db/binlog/Binlog.i: td/db/binlog/Binlog.cpp.i

.PHONY : td/db/binlog/Binlog.i

# target to preprocess a source file
td/db/binlog/Binlog.cpp.i:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/binlog/Binlog.cpp.i
.PHONY : td/db/binlog/Binlog.cpp.i

td/db/binlog/Binlog.s: td/db/binlog/Binlog.cpp.s

.PHONY : td/db/binlog/Binlog.s

# target to generate assembly for a file
td/db/binlog/Binlog.cpp.s:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/binlog/Binlog.cpp.s
.PHONY : td/db/binlog/Binlog.cpp.s

td/db/binlog/BinlogEvent.o: td/db/binlog/BinlogEvent.cpp.o

.PHONY : td/db/binlog/BinlogEvent.o

# target to build an object file
td/db/binlog/BinlogEvent.cpp.o:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/binlog/BinlogEvent.cpp.o
.PHONY : td/db/binlog/BinlogEvent.cpp.o

td/db/binlog/BinlogEvent.i: td/db/binlog/BinlogEvent.cpp.i

.PHONY : td/db/binlog/BinlogEvent.i

# target to preprocess a source file
td/db/binlog/BinlogEvent.cpp.i:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/binlog/BinlogEvent.cpp.i
.PHONY : td/db/binlog/BinlogEvent.cpp.i

td/db/binlog/BinlogEvent.s: td/db/binlog/BinlogEvent.cpp.s

.PHONY : td/db/binlog/BinlogEvent.s

# target to generate assembly for a file
td/db/binlog/BinlogEvent.cpp.s:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/binlog/BinlogEvent.cpp.s
.PHONY : td/db/binlog/BinlogEvent.cpp.s

td/db/binlog/ConcurrentBinlog.o: td/db/binlog/ConcurrentBinlog.cpp.o

.PHONY : td/db/binlog/ConcurrentBinlog.o

# target to build an object file
td/db/binlog/ConcurrentBinlog.cpp.o:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/binlog/ConcurrentBinlog.cpp.o
.PHONY : td/db/binlog/ConcurrentBinlog.cpp.o

td/db/binlog/ConcurrentBinlog.i: td/db/binlog/ConcurrentBinlog.cpp.i

.PHONY : td/db/binlog/ConcurrentBinlog.i

# target to preprocess a source file
td/db/binlog/ConcurrentBinlog.cpp.i:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/binlog/ConcurrentBinlog.cpp.i
.PHONY : td/db/binlog/ConcurrentBinlog.cpp.i

td/db/binlog/ConcurrentBinlog.s: td/db/binlog/ConcurrentBinlog.cpp.s

.PHONY : td/db/binlog/ConcurrentBinlog.s

# target to generate assembly for a file
td/db/binlog/ConcurrentBinlog.cpp.s:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/binlog/ConcurrentBinlog.cpp.s
.PHONY : td/db/binlog/ConcurrentBinlog.cpp.s

td/db/binlog/binlog_dump.o: td/db/binlog/binlog_dump.cpp.o

.PHONY : td/db/binlog/binlog_dump.o

# target to build an object file
td/db/binlog/binlog_dump.cpp.o:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/binlog_dump.dir/build.make tddb/CMakeFiles/binlog_dump.dir/td/db/binlog/binlog_dump.cpp.o
.PHONY : td/db/binlog/binlog_dump.cpp.o

td/db/binlog/binlog_dump.i: td/db/binlog/binlog_dump.cpp.i

.PHONY : td/db/binlog/binlog_dump.i

# target to preprocess a source file
td/db/binlog/binlog_dump.cpp.i:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/binlog_dump.dir/build.make tddb/CMakeFiles/binlog_dump.dir/td/db/binlog/binlog_dump.cpp.i
.PHONY : td/db/binlog/binlog_dump.cpp.i

td/db/binlog/binlog_dump.s: td/db/binlog/binlog_dump.cpp.s

.PHONY : td/db/binlog/binlog_dump.s

# target to generate assembly for a file
td/db/binlog/binlog_dump.cpp.s:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/binlog_dump.dir/build.make tddb/CMakeFiles/binlog_dump.dir/td/db/binlog/binlog_dump.cpp.s
.PHONY : td/db/binlog/binlog_dump.cpp.s

td/db/binlog/detail/BinlogEventsBuffer.o: td/db/binlog/detail/BinlogEventsBuffer.cpp.o

.PHONY : td/db/binlog/detail/BinlogEventsBuffer.o

# target to build an object file
td/db/binlog/detail/BinlogEventsBuffer.cpp.o:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/binlog/detail/BinlogEventsBuffer.cpp.o
.PHONY : td/db/binlog/detail/BinlogEventsBuffer.cpp.o

td/db/binlog/detail/BinlogEventsBuffer.i: td/db/binlog/detail/BinlogEventsBuffer.cpp.i

.PHONY : td/db/binlog/detail/BinlogEventsBuffer.i

# target to preprocess a source file
td/db/binlog/detail/BinlogEventsBuffer.cpp.i:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/binlog/detail/BinlogEventsBuffer.cpp.i
.PHONY : td/db/binlog/detail/BinlogEventsBuffer.cpp.i

td/db/binlog/detail/BinlogEventsBuffer.s: td/db/binlog/detail/BinlogEventsBuffer.cpp.s

.PHONY : td/db/binlog/detail/BinlogEventsBuffer.s

# target to generate assembly for a file
td/db/binlog/detail/BinlogEventsBuffer.cpp.s:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/binlog/detail/BinlogEventsBuffer.cpp.s
.PHONY : td/db/binlog/detail/BinlogEventsBuffer.cpp.s

td/db/binlog/detail/BinlogEventsProcessor.o: td/db/binlog/detail/BinlogEventsProcessor.cpp.o

.PHONY : td/db/binlog/detail/BinlogEventsProcessor.o

# target to build an object file
td/db/binlog/detail/BinlogEventsProcessor.cpp.o:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/binlog/detail/BinlogEventsProcessor.cpp.o
.PHONY : td/db/binlog/detail/BinlogEventsProcessor.cpp.o

td/db/binlog/detail/BinlogEventsProcessor.i: td/db/binlog/detail/BinlogEventsProcessor.cpp.i

.PHONY : td/db/binlog/detail/BinlogEventsProcessor.i

# target to preprocess a source file
td/db/binlog/detail/BinlogEventsProcessor.cpp.i:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/binlog/detail/BinlogEventsProcessor.cpp.i
.PHONY : td/db/binlog/detail/BinlogEventsProcessor.cpp.i

td/db/binlog/detail/BinlogEventsProcessor.s: td/db/binlog/detail/BinlogEventsProcessor.cpp.s

.PHONY : td/db/binlog/detail/BinlogEventsProcessor.s

# target to generate assembly for a file
td/db/binlog/detail/BinlogEventsProcessor.cpp.s:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/binlog/detail/BinlogEventsProcessor.cpp.s
.PHONY : td/db/binlog/detail/BinlogEventsProcessor.cpp.s

td/db/detail/RawSqliteDb.o: td/db/detail/RawSqliteDb.cpp.o

.PHONY : td/db/detail/RawSqliteDb.o

# target to build an object file
td/db/detail/RawSqliteDb.cpp.o:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/detail/RawSqliteDb.cpp.o
.PHONY : td/db/detail/RawSqliteDb.cpp.o

td/db/detail/RawSqliteDb.i: td/db/detail/RawSqliteDb.cpp.i

.PHONY : td/db/detail/RawSqliteDb.i

# target to preprocess a source file
td/db/detail/RawSqliteDb.cpp.i:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/detail/RawSqliteDb.cpp.i
.PHONY : td/db/detail/RawSqliteDb.cpp.i

td/db/detail/RawSqliteDb.s: td/db/detail/RawSqliteDb.cpp.s

.PHONY : td/db/detail/RawSqliteDb.s

# target to generate assembly for a file
td/db/detail/RawSqliteDb.cpp.s:
	cd /Users/aom/ruby/telegram/td/build && $(MAKE) -f tddb/CMakeFiles/tddb.dir/build.make tddb/CMakeFiles/tddb.dir/td/db/detail/RawSqliteDb.cpp.s
.PHONY : td/db/detail/RawSqliteDb.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... list_install_components"
	@echo "... rebuild_cache"
	@echo "... edit_cache"
	@echo "... install/local"
	@echo "... test"
	@echo "... install/strip"
	@echo "... install"
	@echo "... binlog_dump"
	@echo "... tddb"
	@echo "... td/db/SqliteDb.o"
	@echo "... td/db/SqliteDb.i"
	@echo "... td/db/SqliteDb.s"
	@echo "... td/db/SqliteKeyValue.o"
	@echo "... td/db/SqliteKeyValue.i"
	@echo "... td/db/SqliteKeyValue.s"
	@echo "... td/db/SqliteKeyValueAsync.o"
	@echo "... td/db/SqliteKeyValueAsync.i"
	@echo "... td/db/SqliteKeyValueAsync.s"
	@echo "... td/db/SqliteStatement.o"
	@echo "... td/db/SqliteStatement.i"
	@echo "... td/db/SqliteStatement.s"
	@echo "... td/db/binlog/Binlog.o"
	@echo "... td/db/binlog/Binlog.i"
	@echo "... td/db/binlog/Binlog.s"
	@echo "... td/db/binlog/BinlogEvent.o"
	@echo "... td/db/binlog/BinlogEvent.i"
	@echo "... td/db/binlog/BinlogEvent.s"
	@echo "... td/db/binlog/ConcurrentBinlog.o"
	@echo "... td/db/binlog/ConcurrentBinlog.i"
	@echo "... td/db/binlog/ConcurrentBinlog.s"
	@echo "... td/db/binlog/binlog_dump.o"
	@echo "... td/db/binlog/binlog_dump.i"
	@echo "... td/db/binlog/binlog_dump.s"
	@echo "... td/db/binlog/detail/BinlogEventsBuffer.o"
	@echo "... td/db/binlog/detail/BinlogEventsBuffer.i"
	@echo "... td/db/binlog/detail/BinlogEventsBuffer.s"
	@echo "... td/db/binlog/detail/BinlogEventsProcessor.o"
	@echo "... td/db/binlog/detail/BinlogEventsProcessor.i"
	@echo "... td/db/binlog/detail/BinlogEventsProcessor.s"
	@echo "... td/db/detail/RawSqliteDb.o"
	@echo "... td/db/detail/RawSqliteDb.i"
	@echo "... td/db/detail/RawSqliteDb.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /Users/aom/ruby/telegram/td/build && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

